name: ML Project CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_IMAGE_NAME: fikaaw/smsml-ida-sri-afiqah
  PYTHON_VERSION: 3.8

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Set up Conda
      uses: conda-incubator/setup-miniconda@v2
      with:
        activate-environment: mlproject
        environment-file: Workflow-CI/MLProject/conda.yaml
        python-version: ${{ env.PYTHON_VERSION }}
        auto-activate-base: false

    - name: Install dependencies
      shell: bash -l {0}
      run: |
        conda activate mlproject
        pip install pytest mlflow

    - name: Run data preprocessing
      shell: bash -l {0}
      run: |
        conda activate mlproject
        cd Workflow-CI/MLProject
        python -c "import sys; sys.path.append('.'); exec(open('modelling.py').read().split('# Preprocessing section')[0] if '# Preprocessing section' in open('modelling.py').read() else '')"

    - name: Run model training and testing
      shell: bash -l {0}
      run: |
        conda activate mlproject
        cd Workflow-CI/MLProject
        mlflow run . --no-conda

    - name: Upload test results
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: |
          Workflow-CI/MLProject/outputs/
          Workflow-CI/MLProject/models/
          Workflow-CI/MLProject/mlruns/
        retention-days: 30

  build-and-push-docker:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./Workflow-CI
        file: ./Workflow-CI/Dockerfile
        push: true
        tags: |
          ${{ env.DOCKER_IMAGE_NAME }}:latest
          ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy-artifacts:
    needs: [test, build-and-push-docker]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download test artifacts
      uses: actions/download-artifact@v3
      with:
        name: test-results
        path: ./artifacts

    - name: Create release artifacts
      run: |
        mkdir -p release-artifacts
        cp -r artifacts/* release-artifacts/
        cp Workflow-CI/MLProject/conda.yaml release-artifacts/
        cp Workflow-CI/MLProject/MLProject release-artifacts/
        echo "Docker Image: ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}" > release-artifacts/docker-info.txt
        tar -czf release-artifacts.tar.gz release-artifacts/

    - name: Upload to GitHub Releases
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: release-artifacts.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload artifacts to repository
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git checkout -b artifacts-$(date +%Y%m%d-%H%M%S) || git checkout artifacts-$(date +%Y%m%d-%H%M%S)
        mkdir -p artifacts-storage
        cp -r release-artifacts/* artifacts-storage/
        git add artifacts-storage/
        git commit -m "Add ML artifacts from build ${{ github.sha }}" || exit 0
        git push origin HEAD

    # Optional: Upload to Google Drive (requires additional setup)
    - name: Upload to Google Drive
      if: env.GOOGLE_DRIVE_ENABLED == 'true'
      uses: adityak74/google-drive-upload-git-action@main
      with:
        credentials: ${{ secrets.GOOGLE_DRIVE_CREDENTIALS }}
        filename: release-artifacts.tar.gz
        folderId: ${{ secrets.GOOGLE_DRIVE_FOLDER_ID }}
        name: "ML-Artifacts-${{ github.sha }}.tar.gz"

  notify:
    needs: [test, build-and-push-docker, deploy-artifacts]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Notify completion
      run: |
        if [ "${{ needs.test.result }}" == "success" ] && [ "${{ needs.build-and-push-docker.result }}" == "success" ]; then
          echo "‚úÖ CI/CD Pipeline completed successfully!"
          echo "üê≥ Docker image: ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}"
        else
          echo "‚ùå CI/CD Pipeline failed!"
        fi